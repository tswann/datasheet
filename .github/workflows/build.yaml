name: Build datasheets

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Pull source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Install python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      #----------------------------------------------
      # install root project, if required
      #----------------------------------------------
      - name: Install terminal-builder
        run: poetry install --no-interaction

      #----------------------------------------------
      # run black to check code style consistency
      #----------------------------------------------
      - name: Run black
        run: |
          source .venv/bin/activate
          poetry run black . --check
      
      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      - name: Run Python unit tests
        run: |
          source .venv/bin/activate
          poetry run pytest tests/
